######################################################################################
#############   Aries ACA-Py ACC-Py Jupyter Playground Configuration   ###############
######################################################################################
##### The example configuration defines services for two provers: Alice and Bob   #####
##### A template for the set of prover prover is provided below these              #####
##### Uncomment and customise as you like                                        #####
##### You will need to create a folder under playground for this prover           #####
##### Copy the template playground/prover folder to get started                   #####
##### This contains an empty notebooks folder and a template dummy.env file      #####
##### The notebooks folder will be mounted in the jupyter workspace              #####
##### You need to customise the dummy.env file and rename it to .env             #####
##### Change any variables enclosed with < > e.g. ENV=<prover>                    #####
##### You do not need to change the ports - each agent runs on it's own container ####
##### Make sure you map the ports in the env file to unique ports on your machine ####
##### All the docker services use this file                                      #####
##### Add any defined services to the DEFAULT_CONTAINERS arg in the manage file  #####
######################################################################################
version: "3"
services:
  ##### Bob Services #####
  #### ngrok
  # Use if wish to expose agent to public. E.g. so mobile wallets can access #
  ngrok-holder:
    image: wernight/ngrok
    env_file:
      - playground/holder/.env
    ## You must make sure this points to your agent service. e.g. holder-agent:HTTP_PORT
    command: ngrok http holder-agent:3020 --log stdout
    networks:
      - holder-domain
  ### agent
  # This is holder's ACA-Py instance
  # See dockerfiles/Dockerfile.agent
  holder-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    env_file:
      - playground/holder/.env
    ## These map from ports defined in the .env file to unique ports on your machine
    ## YOUR_MACHINE:DOCKER_SERVICE
    ports:
      # HTTP_PORT
      - 4020:3020
      # ADMIN_PORT
      - 4021:3021
    volumes:
        - ./playground/holder/logs:/home/indy/logs
    networks:
      - holder-domain
  ### business-logic
  # This is where you will create notebooks to interact with your agent
  # This uses the aries-cloudcontroller pip package.
  # See dockerfiles/Dockerfile.controller
  # All business logic share a common set of code recipes to get you started
  holder-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    env_file:
      - playground/holder/.env
    depends_on:
      - holder-agent
    networks:
      - holder-domain
    volumes:
      - ./playground/holder/notebooks:/workspace
      - ./recipes:/workspace/recipes
      - ./libs:/workspace/libs
    ports:
      # Jupyter Notebook port - always map from 8888 to any available port
      - 8889:8888
      # WEBHOOK_PORT
      - 4010:3010
  #########################################################################
  #### Alice Services
  issuer-wallet-db:
    image: postgres:11
    command: postgres -c listen_addresses='*'
    env_file:
      - playground/issuer/.env
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - issuer-domain
    tty: true
  ngrok-issuer:
    image: wernight/ngrok
    env_file:
      - playground/issuer/.env
    command: ngrok http issuer-agent:3020 --log stdout
    networks:
      - issuer-domain
  issuer-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    env_file:
      - playground/issuer/.env
    ports:
      - 3020:3020
      - 3021:3021
    volumes:
        - ./playground/issuer/logs:/home/indy/logs
    depends_on:
      - issuer-wallet-db
    networks:
      - issuer-domain
  issuer-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    env_file:
      - playground/issuer/.env
    depends_on:
      - issuer-agent
    networks:
      - issuer-domain
    volumes:
      - ./playground/issuer/notebooks:/workspace
      - ./recipes:/workspace/recipes
      - ./libs:/workspace/libs
    ports:
      - "8888:8888"
      - 3010:3010
  ngrok-verifier:
    image: wernight/ngrok
    command: ngrok http verifier-agent:3020 --log stdout
    networks:
      - verifier-domain
  verifier-wallet-db:
    image: postgres:11
    container_name: verifier-wallet-db
    command: postgres -c listen_addresses='*'
    env_file:
      - playground/verifier/.env
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    tty: true
    networks:
      - verifier-domain
  verifier-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    env_file:
      - playground/verifier/.env
    ports:
      - 6020:3020
      - 6021:3021
    volumes:
      - ./playground/verifier/logs:/home/indy/logs
    networks:
      - verifier-domain
    depends_on:
      - verifier-wallet-db
  verifier-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    env_file:
      - playground/verifier/.env
    depends_on:
      - verifier-agent
    networks:
      - verifier-domain
    volumes:
      - ./playground/verifier/notebooks:/workspace
      - ./recipes:/workspace/recipes
      - ./libs:/workspace/libs
    ports:
      - "8891:8888"
      - 6010:3010
  #    #### ACTOR TEMPLATE SERVICES - Uncomment and edit as appropriate ######
  #      ngrok-actor:
  #       image: wernight/ngrok
  #       command: ngrok http actor-agent:3020 --log stdout
  #      networks:
  #       - actor-domain
  #      actor-wallet-db:
  #        image: postgres:11
  #        container_name: actor-wallet-db
  #        command: postgres -c listen_addresses='*'
  #        # env file defines
  #        env_file:
  #          - playground/actor/.env
  #        volumes:
  #          - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
  #        networks:
  #          - actor-domain
  #        tty: true
  #      actor-agent:
  #        build:
  #          context: .
  #          dockerfile: dockerfiles/Dockerfile.agent
  #        env_file:
  #          - playground/actor/.env
  #        ports:
  #          # HTTP_PORT
  #          - <UNIQUE_PORT>:3020
  #          # ADMIN_PORT
  #          - <UNIQUE_PORT>:3021
  #        depends_on:
  #          - actor-wallet-db
  #        networks:
  #          - actor-domain
  #      actor-business-logic:
  #        build:
  #          context: .
  #          dockerfile: dockerfiles/Dockerfile.controller
  #        env_file:
  #          - playground/actor/.env
  #        depends_on:
  #          - actor-agent
  #        networks:
  #          - actor-domain
  #        volumes:
  #          - ./playground/actor/notebooks:/workspace
  #          - ./recipes:/workspace/recipes
  #        ports:
  #          - 8890:8888
  #          # WEBHOOK_PORT
  #          - <UNIQUE_PORT>:3010
##### UNCOMMENT FOR A TAILS SERVER ######
# Note - for revocation to work you will have to make additional changes to the env files
#  tails-server:
#    env_file:
#      - playground/issuer/.env
#    build:
#      context: https://github.com/bcgov/indy-tails-server.git
#      dockerfile: docker/Dockerfile.tails-server
#    ports:
#      - 6543:6543
#    networks:
#      - issuer-domain
#      - holder-domain
#      - verifier-domain
#    command: >
#      tails-server
#        --host 0.0.0.0
#        --port 6543
#        --storage-path /tmp/tails-files
#        --log-level INFO
networks:
  issuer-domain:
  holder-domain:
  verifier-domain:
